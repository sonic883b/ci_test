name: Docker Build and ECS Deploy

on:
  push:
    branches:
      # - main
      - master
      - gha_test
      
jobs:
  pr-release:
    name: pr
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Get VERSION
        id: get-version
        run: |
          VERSION=$(cat VERSION)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Create a release pull request
        uses: bakunyo/git-pr-release-action@v1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_PR_RELEASE_BRANCH_PRODUCTION: release
          GIT_PR_RELEASE_BRANCH_STAGING: main
          GIT_PR_RELEASE_LABELS: release
          GIT_PR_RELEASE_TEMPLATE: .git-pr-release-template
          VERSION: ${{ steps.get-version.outputs.version }}
  
  build:
    runs-on: ubuntu-latest
    needs: pr-release
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: "ap-northeast-1"
      ASSUME_ROLE_ARN: "arn:aws:iam::233206241031:role/api-idpf-stg-oidc"
      ENV: "stg"
      ECR_URL: "233206241031.dkr.ecr.ap-northeast-1.amazonaws.com"
      ECR_REPOSITORY: "233206241031.dkr.ecr.ap-northeast-1.amazonaws.com/idpf-api-test"
      ECS_CLUSTER_ARN: "arn:aws:ecs:ap-northeast-1:233206241031:cluster/idpf-stg"
      ECS_SERVICE_NAME: "idpf-api-test"

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: OIDC assume Role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: ${{ env.ASSUME_ROLE_ARN }}
        role-session-name: ${{ github.sha }}

    - name: prepare to build set image name and branch
      run: |
        ### github.repository からリポジトリ名を取得して DOCKER_IMAGE にセット
        echo "DOCKER_IMAGE=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)" >> $GITHUB_ENV

        IMAGE_BRANCH="$(git name-rev --name-only HEAD | sed 's/\//_/g' | sed 's/\^/_/g')"
        IMAGE_REV="$(git rev-parse --short HEAD)"

        echo IMAGE_BRANCH="$IMAGE_BRANCH" >> "$GITHUB_ENV"
        echo IMAGE_REV="$IMAGE_REV" >> "$GITHUB_ENV"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: ${{ env.DOCKER_IMAGE}}:latest
        load: true

    - name: Login to Amazon ECR
      run: aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_URL }}

    - name: Push ECR
      run: |
        docker tag ${{ env.DOCKER_IMAGE}}:latest ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_BRANCH }}_${{ env.IMAGE_REV }}
        docker push ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_BRANCH }}_${{ env.IMAGE_REV }}
    
    - name: ecspresso setup
      uses: kayac/ecspresso@v2
      with:
        version: v2.3.0 # or latest

    ### Todo: ecs-task.service.json で設定しているAWSリソースは　CFn Outputs から取得するようにする
    ### https://github.com/kayac/ecspresso?tab=readme-ov-file#cloudformation
    - name: Deploy to ECS
      run: |
        ecspresso deploy --config .github/workflows/ecs/ecspresso.yml
